//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18051 版自动生成。
// 
#pragma warning disable 1591

namespace WebMisSharp.CCTWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ChinaCloudTechWSSoap", Namespace="http://www.ChinaCloudTech.com/")]
    public partial class ChinaCloudTechWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetWSInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWSInfoObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SoftUsingStatOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ChinaCloudTechWS() {
            this.Url = global::WebMisSharp.Properties.Settings.Default.WebMisSharp_CCTWS_ChinaCloudTechWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetWSInfoCompletedEventHandler GetWSInfoCompleted;
        
        /// <remarks/>
        public event GetWSInfoObjectCompletedEventHandler GetWSInfoObjectCompleted;
        
        /// <remarks/>
        public event SoftUsingStatCompletedEventHandler SoftUsingStatCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ChinaCloudTech.com/GetWSInfo", RequestNamespace="http://www.ChinaCloudTech.com/", ResponseNamespace="http://www.ChinaCloudTech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceInfo[] GetWSInfo(string type) {
            object[] results = this.Invoke("GetWSInfo", new object[] {
                        type});
            return ((WebServiceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWSInfoAsync(string type) {
            this.GetWSInfoAsync(type, null);
        }
        
        /// <remarks/>
        public void GetWSInfoAsync(string type, object userState) {
            if ((this.GetWSInfoOperationCompleted == null)) {
                this.GetWSInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWSInfoOperationCompleted);
            }
            this.InvokeAsync("GetWSInfo", new object[] {
                        type}, this.GetWSInfoOperationCompleted, userState);
        }
        
        private void OnGetWSInfoOperationCompleted(object arg) {
            if ((this.GetWSInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWSInfoCompleted(this, new GetWSInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ChinaCloudTech.com/GetWSInfoObject", RequestNamespace="http://www.ChinaCloudTech.com/", ResponseNamespace="http://www.ChinaCloudTech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetWSInfoObject(string type) {
            object[] results = this.Invoke("GetWSInfoObject", new object[] {
                        type});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWSInfoObjectAsync(string type) {
            this.GetWSInfoObjectAsync(type, null);
        }
        
        /// <remarks/>
        public void GetWSInfoObjectAsync(string type, object userState) {
            if ((this.GetWSInfoObjectOperationCompleted == null)) {
                this.GetWSInfoObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWSInfoObjectOperationCompleted);
            }
            this.InvokeAsync("GetWSInfoObject", new object[] {
                        type}, this.GetWSInfoObjectOperationCompleted, userState);
        }
        
        private void OnGetWSInfoObjectOperationCompleted(object arg) {
            if ((this.GetWSInfoObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWSInfoObjectCompleted(this, new GetWSInfoObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ChinaCloudTech.com/SoftUsingStat", RequestNamespace="http://www.ChinaCloudTech.com/", ResponseNamespace="http://www.ChinaCloudTech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SoftUsingStat(string MACID, string Remark, string IP) {
            this.Invoke("SoftUsingStat", new object[] {
                        MACID,
                        Remark,
                        IP});
        }
        
        /// <remarks/>
        public void SoftUsingStatAsync(string MACID, string Remark, string IP) {
            this.SoftUsingStatAsync(MACID, Remark, IP, null);
        }
        
        /// <remarks/>
        public void SoftUsingStatAsync(string MACID, string Remark, string IP, object userState) {
            if ((this.SoftUsingStatOperationCompleted == null)) {
                this.SoftUsingStatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoftUsingStatOperationCompleted);
            }
            this.InvokeAsync("SoftUsingStat", new object[] {
                        MACID,
                        Remark,
                        IP}, this.SoftUsingStatOperationCompleted, userState);
        }
        
        private void OnSoftUsingStatOperationCompleted(object arg) {
            if ((this.SoftUsingStatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoftUsingStatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ChinaCloudTech.com/")]
    public partial class WebServiceInfo {
        
        private int idField;
        
        private string inameField;
        
        private string incontentField;
        
        private string createdateField;
        
        private string createmanField;
        
        private int hitsField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string iname {
            get {
                return this.inameField;
            }
            set {
                this.inameField = value;
            }
        }
        
        /// <remarks/>
        public string incontent {
            get {
                return this.incontentField;
            }
            set {
                this.incontentField = value;
            }
        }
        
        /// <remarks/>
        public string createdate {
            get {
                return this.createdateField;
            }
            set {
                this.createdateField = value;
            }
        }
        
        /// <remarks/>
        public string createman {
            get {
                return this.createmanField;
            }
            set {
                this.createmanField = value;
            }
        }
        
        /// <remarks/>
        public int hits {
            get {
                return this.hitsField;
            }
            set {
                this.hitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWSInfoCompletedEventHandler(object sender, GetWSInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWSInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWSInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWSInfoObjectCompletedEventHandler(object sender, GetWSInfoObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWSInfoObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWSInfoObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SoftUsingStatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591